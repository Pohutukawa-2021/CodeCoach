{"version":3,"sources":["components/buttons/LoginButton.jsx","Pages/GreetPage.jsx","components/UsersOnline.jsx","redux/actions/user.js","components/navigation/Nav.jsx","components/buttons/LogoutButton.jsx","layouts/header/Header.jsx","components/posts/QuestionForm.jsx","redux/actions/posts.js","components/ChatComponent.jsx","redux/actions/commentsByPost.js","components/posts/PostComponent.jsx","components/users/UserProfile.jsx","components/users/UsersList.jsx","components/MessageListComponent.jsx","Pages/ProfilePage.jsx","components/users/EditProfile.jsx","Pages/AppHome.jsx","redux/reducers/testReducer.js","redux/reducers/user.js","redux/reducers/messages.js","redux/reducers/usersOnline.js","redux/reducers/users.js","redux/reducers/waiting.js","redux/reducers/comments.js","redux/reducers/posts.js","redux/index.js","components/SocketReduxWrapper.jsx","App.js","reportWebVitals.js","index.js"],"names":["LoginButton","loginWithRedirect","useAuth0","onClick","GreetPage","isAuthenticated","to","UsersOnline","usersOnline","useSelector","state","onlineList","test","Object","entries","forEach","key","value","push","id","auth_id","src","image_url","alt","username","setUsersOnlineList","sendUserDetails","user","type","data","Nav","className","LogoutButton","logout","returnTo","window","location","origin","Header","QuestionForm","dispatch","useDispatch","allPosts","posts","users","useState","title","body","form","setForm","handleChange","e","target","name","map","post","postId","question","comments","commentObj","comment","htmlFor","placeholder","onChange","preventDefault","ChatComponent","userText","setUserText","userId","userAccount","useParams","directMessages","messages","sendMessage","message_id","uuidv4","from","date","Date","now","time","message","undefined","Set","msgId","msg","find","Message","showSenderName","bubblesCentered","bubbleStyles","text","fontSize","chatbubble","borderRadius","padding","onKeyDown","keyCode","onEnter","commentsByPost","PostComponent","Number","UserProfile","console","log","email","role","experience","bio","UsersList","MessageListComponent","allUsers","messageList","keys","userDetails","parseInt","lastMessage","length","getLatestMessageForUser","ProfilePage","EditProfile","history","useHistory","hidden","AppHome","path","useRouteMatch","waiting","split","exact","testReducer","action","conversationId","newStateObject","allReducers","combineReducers","SocketReduxWrapper","children","jwt","setJwt","getAccessTokenSilently","a","audience","accessToken","useEffect","getToken","socket","io","query","socketIoMiddleware","createSocketIoMiddleware","store","applyMiddleware","createStore","SocketReduxWrapperMemoized","memo","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","domain","clientId","redirectUri","document","getElementById"],"mappings":"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","file":"static/js/main.11c8f893.chunk.js","sourcesContent":["import React from \"react\";\r\nimport { useAuth0 } from \"@auth0/auth0-react\";\r\n\r\nfunction LoginButton(){\r\n  const { loginWithRedirect } = useAuth0();\r\n\r\n  return <button onClick={() => loginWithRedirect()}>Log In</button>;\r\n};\r\n\r\nexport default LoginButton;","import React from \"react\"\r\nimport LoginButton from \"../components/buttons/LoginButton\"\r\nimport {Redirect} from 'react-router-dom'\r\nimport {useAuth0} from '@auth0/auth0-react'\r\n\r\nfunction GreetPage() {\r\n  const { isAuthenticated } = useAuth0();\r\n\r\n  if (isAuthenticated) {\r\n    return <Redirect to=\"/app/\" />;\r\n  }\r\n  return (\r\n    <div>\r\n    <h1>Hello</h1>\r\n    <LoginButton />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default GreetPage;\r\n","import React from \"react\";\r\nimport { useSelector } from \"react-redux\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nfunction UsersOnline() {\r\n  const usersOnline = useSelector((state) => state.usersOnline);\r\n\r\n  function setUsersOnlineList() {\r\n    let test = [];\r\n    Object.entries(usersOnline).forEach(([key, value]) => {\r\n      test.push(\r\n        <li key={key} id={value.auth_id}>\r\n          <Link to={`/app/messaging/${value.id}`}>\r\n            <img src={value.image_url} alt={value.username} />\r\n          </Link>\r\n        </li>\r\n      );\r\n    });\r\n    return test;\r\n  }\r\n  const onlineList = setUsersOnlineList();\r\n  return (\r\n    <div>\r\n      <h3>Online Users</h3>\r\n      <ul>{onlineList}</ul>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default UsersOnline;\r\n","export function sendUserDetails(user) {\r\n  return {\r\n    type: 'server/sendUserDetails',\r\n    data: user\r\n  }\r\n}","import React from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport { useAuth0 } from \"@auth0/auth0-react\";\r\n\r\nfunction Nav() {\r\n  const { isAuthenticated } = useAuth0();\r\n\r\n  if (isAuthenticated) {\r\n    return (\r\n      <div>\r\n        <Link to=\"/app\" className=\"nav\">\r\n          Home\r\n        </Link>\r\n        <Link to=\"/app/users\" className=\"nav\">\r\n          Users\r\n        </Link>\r\n        <Link to=\"/app/messaging\" className=\"nav\">\r\n          Messages\r\n        </Link>\r\n        <Link to=\"/app/createpost\" className=\"nav\">\r\n          Ask a Question\r\n        </Link>\r\n        <Link to=\"/app/myprofile\" className=\"nav\">\r\n          Avatar\r\n        </Link>\r\n      </div>\r\n    );\r\n  }\r\n  if (!isAuthenticated) {\r\n    return (\r\n      <div>\r\n        <Link to=\"/\" className=\"nav\">\r\n          Home\r\n        </Link>\r\n        <Link to=\"/\" className=\"nav\">\r\n          Sign In\r\n        </Link>\r\n        <Link to=\"/\" className=\"nav\">\r\n          Register\r\n        </Link>\r\n      </div>\r\n    );\r\n  }\r\n}\r\nexport default Nav;\r\n","import React from \"react\";\r\nimport { useAuth0 } from \"@auth0/auth0-react\";\r\n\r\nconst LogoutButton = () => {\r\n  const { logout } = useAuth0();\r\n\r\n  return (\r\n    <button onClick={() => logout({ returnTo: window.location.origin })}>\r\n      Log Out\r\n    </button>\r\n  );\r\n};\r\n\r\nexport default LogoutButton;","import React from 'react'\r\nimport Nav from '../../components/navigation/Nav'\r\nimport LogoutButton from '../../components/buttons/LogoutButton'\r\n\r\nfunction Header() {\r\n  return (\r\n    <div className='header-container'>\r\n      <span>Logo</span>\r\n      <Nav />\r\n      <LogoutButton />\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Header\r\n","import React, { useState } from \"react\";\r\nimport { useSelector } from \"react-redux\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { addPost } from \"../../redux/actions/posts\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nexport function QuestionForm() {\r\n  const dispatch = useDispatch();\r\n  const allPosts = useSelector((state) => state.posts);\r\n  const users = useSelector((state) => state.users);\r\n  const [form, setForm] = useState({\r\n    title: \"\",\r\n    body: \"\",\r\n  });\r\n  \r\n  function handleChange(e) {\r\n    const { name, value } = e.target;\r\n    setForm({\r\n      ...form,\r\n      [name]: value,\r\n    });\r\n  }\r\n\r\n  function handleClick(e) {\r\n    e.preventDefault();\r\n    dispatch(addPost(form));\r\n    setForm({\r\n      title: \"\",\r\n      body: \"\",\r\n    });\r\n  }\r\n  //console.log(\"allposts: \", allPosts);\r\n  return (\r\n    <>\r\n      <ul>\r\n        {allPosts.map((post) => {\r\n          return (\r\n            <li>\r\n              <Link to={`/app/post/${post.postId}`}>\r\n                {post.question} === {post.user.name}\r\n                <ul>\r\n                  {post.comments.map((commentObj) => (\r\n                    <li>\r\n                      {\" \"}\r\n                      {commentObj.comment} --- {commentObj.username}\r\n                    </li>\r\n                  ))}\r\n                </ul>\r\n              </Link>\r\n            </li>\r\n          );\r\n        })}\r\n      </ul>\r\n\r\n      <section className=\"flex-container\">\r\n        <form className=\"column-6\">\r\n          <div className=\"field\">\r\n            <label htmlFor=\"firstName\" className=\"form-label\">\r\n              Title\r\n            </label>\r\n            <input\r\n              name=\"title\"\r\n              value={form.title}\r\n              placeholder=\"summary\"\r\n              onChange={handleChange}\r\n            ></input>\r\n          </div>\r\n          <div className=\"field\">\r\n            <label htmlFor=\"lastName\" className=\"form-label\">\r\n              Body\r\n            </label>\r\n            <input\r\n              name=\"body\"\r\n              value={form.body}\r\n              placeholder=\"details\"\r\n              onChange={handleChange}\r\n            ></input>\r\n          </div>\r\n          <button\r\n            type=\"submit\"\r\n            className=\"button-primary\"\r\n            onClick={handleClick}\r\n            data-testid=\"submitButton\"\r\n          >\r\n            Ask!\r\n          </button>\r\n        </form>\r\n      </section>\r\n    </>\r\n  );\r\n}\r\n","export function addPost(post) {\r\n  return {\r\n    type: \"server/addPost\",\r\n    data: post,\r\n  };\r\n}\r\n","import { ChatFeed, Message } from \"react-chat-ui\";\r\nimport { useState } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { useParams } from \"react-router\";\r\nimport { v4 as uuidv4 } from \"uuid\";\r\n\r\nfunction ChatComponent() {\r\n  const [userText, setUserText] = useState(\"\");\r\n  const dispatch = useDispatch();\r\n  const userId = useSelector((state) => state.userAccount.id);\r\n  const { id } = useParams();\r\n  const directMessages = useSelector((state) => state.messages[id]);\r\n\r\n  function sendMessage() {\r\n    dispatch({\r\n      type: \"setNewMessage\",\r\n      data: {\r\n        message_id: uuidv4(),\r\n        from: userId,\r\n        to: id,\r\n        date: Date.now(),\r\n        time: Date.now(),\r\n        message: userText,\r\n      },\r\n    });\r\n    dispatch({\r\n      type: \"server/sendMessage\",\r\n      data: {\r\n        from: userId + \"\",\r\n        to: id,\r\n        date: Date.now(),\r\n        time: Date.now(),\r\n        message: userText,\r\n      },\r\n    });\r\n    setUserText(\"\");\r\n  }\r\n\r\n  function onEnter(e) {\r\n    if (e.keyCode === 13 && userText !== \"\") {\r\n      sendMessage();\r\n    }\r\n  }\r\n\r\n  function setMessages() {\r\n    if (directMessages !== undefined) {\r\n      let messageIds = [\r\n        ...new Set(directMessages.map((message) => message.message_id)),\r\n      ];\r\n      let result = messageIds.map((msgId) => {\r\n        let msg = directMessages.find((message) => message.message_id == msgId);\r\n        if (msg.from === userId) {\r\n          msg.from = 0;\r\n        }\r\n        return new Message({\r\n          id: msg.from,\r\n          message: msg.message,\r\n        });\r\n      });\r\n      return result;\r\n    }\r\n    return [];\r\n  }\r\n\r\n  const messages = setMessages();\r\n  return (\r\n    <div className=\"chat\">\r\n      <ChatFeed\r\n        messages={messages}\r\n        showSenderName\r\n        bubblesCentered={false}\r\n        bubbleStyles={{\r\n          text: {\r\n            fontSize: 30,\r\n          },\r\n          chatbubble: {\r\n            borderRadius: 70,\r\n            padding: 40,\r\n          },\r\n        }}\r\n      />\r\n      <input\r\n        onKeyDown={(e) => onEnter(e)}\r\n        value={userText}\r\n        onChange={(e) => setUserText(e.target.value)}\r\n      />\r\n      <button onClick={() => sendMessage()}>Send</button>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default ChatComponent;\r\n","function commentsByPost(message) {\r\n  return {\r\n    type: \"server/addComment\",\r\n    data: message,\r\n  };\r\n}\r\n\r\nexport default commentsByPost","import React, { useState } from \"react\";\r\nimport { useParams } from \"react-router-dom\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport commentsByPost from \"../../redux/actions/commentsByPost\";\r\n\r\nexport function PostComponent() {\r\n  //const allPosts = useSelector((state) => state.posts);\r\n  const { postId } = useParams();\r\n  const id = Number(postId);\r\n  //const post = allPosts.find((post) => post.id === id);\r\n  const dispatch = useDispatch();\r\n\r\n  const [form, setForm] = useState({\r\n    postId: id,\r\n    comment: \"\",\r\n  });\r\n\r\n  function handleChange(e) {\r\n    const { name, value } = e.target;\r\n    setForm({ ...form, [name]: value });\r\n  }\r\n\r\n  function handleClick(e) {\r\n    e.preventDefault();\r\n    //console.log(form);\r\n    dispatch(commentsByPost(form));\r\n    setForm({\r\n      postId: id,\r\n      comment: \"\",\r\n    });\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <h1> Post </h1>\r\n      {/* <ul>{post.time}</ul> */}\r\n\r\n      <form className=\"column-6\">\r\n        <div className=\"field\">\r\n          <label htmlFor=\"firstName\" className=\"form-label\">\r\n            Title\r\n          </label>\r\n          <input\r\n            name=\"comment\"\r\n            value={form.comment}\r\n            placeholder=\"comment\"\r\n            onChange={handleChange}\r\n          ></input>\r\n        </div>\r\n\r\n        <button\r\n          type=\"submit\"\r\n          className=\"button-primary\"\r\n          onClick={handleClick}\r\n          data-testid=\"submitButton\"\r\n        >\r\n          Comment!\r\n        </button>\r\n      </form>\r\n    </>\r\n  );\r\n}\r\n","import React from 'react'\r\nimport { useSelector } from \"react-redux\";\r\nimport { NavLink } from 'react-router-dom';\r\n\r\n\r\nfunction UserProfile() {\r\n  const user = useSelector((state) => state.userAccount)\r\n  console.log(user)\r\n  return (\r\n    <div className='user-container'>\r\n      <img className='avatar' src={user.image_url} alt={user.username} />\r\n      <p>username: {user.username}</p>\r\n      <p>{user.email}</p>\r\n      <p>Role: {user.role}</p>\r\n      <p>Experience: {user.experience}</p>\r\n      <p>Bio: {user.bio}</p>\r\n      <NavLink to=\"/app/editprofile\">Edit details</NavLink>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default UserProfile\r\n","import React from \"react\";\r\nimport { useSelector } from \"react-redux\";\r\nimport Modal from \"react-modal\";\r\n\r\nfunction UsersList() {\r\n  const users = useSelector((state) => state.users);\r\n\r\n  return (\r\n    <>\r\n      <div className=\"user-container\">\r\n        <ul>\r\n          {users.map((user) => (\r\n            <div key={user.id}>\r\n              <img\r\n                className=\"avatar\"\r\n                src={user.image_url}\r\n                alt={user.username}\r\n              />\r\n              <li>username: {user.username}</li>\r\n              <li>{user.email}</li>\r\n              <li>Role: {user.role}</li>\r\n              <li>Experience: {user.experience}</li>\r\n              <li>Bio: {user.bio}</li>\r\n            </div>\r\n          ))}\r\n        </ul>\r\n      </div>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default UsersList;\r\n","import React from \"react\";\r\nimport { useSelector } from \"react-redux\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nfunction MessageListComponent() {\r\n  const allUsers = useSelector((state) => state.users);\r\n  const directMessages = useSelector((state) => state.messages);\r\n\r\n  function getUserDetailsById(userId) {\r\n    return allUsers.find((user) => user.id === parseInt(userId));\r\n  }\r\n\r\n  function getLatestMessageForUser(userId) {\r\n    return directMessages[userId][directMessages[userId].length - 1];\r\n  }\r\n\r\n  function getUsersInConversationWith() {\r\n    const peopleInConversationWithId = Object.keys(directMessages);\r\n    return peopleInConversationWithId.map((key) => {\r\n      const userDetails = getUserDetailsById(key);\r\n      const lastMessage = getLatestMessageForUser(key);\r\n      return (\r\n        <li>\r\n          <Link to={`/app/messaging/${userDetails.id}`}>\r\n            <img src={userDetails.image_url} alt={userDetails.username} />\r\n            <p>{lastMessage.message}</p>\r\n          </Link>\r\n        </li>\r\n      );\r\n    });\r\n  }\r\n\r\n  const messageList = getUsersInConversationWith();\r\n  return (\r\n    <div>\r\n      <h1>Chat</h1>\r\n      <ul>{messageList}</ul>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default MessageListComponent;\r\n","import React from 'react'\r\nimport UsersList from '../components/users/UsersList'\r\n\r\n\r\nfunction ProfilePage() {\r\n  return (\r\n    <div>\r\n      <h2>Developers List</h2>\r\n      <UsersList />\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default ProfilePage\r\n","import React, {useState } from 'react'\r\nimport {useHistory} from 'react-router-dom'\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport {sendUserDetails} from \"../../redux/actions/user\"\r\n\r\nfunction EditProfile() {\r\n  const dispatch = useDispatch();\r\n  const history = useHistory();\r\n  const user = useSelector((state) => state.userAccount)\r\n  const [form, setForm] = useState({\r\n    name: user.username,\r\n    role: \"\",\r\n    experience: \"\",\r\n    bio: user.bio,\r\n  });\r\n  \r\n  function handleChange(e) {\r\n    const { name, value } = e.target;\r\n    setForm({\r\n      ...form,\r\n      [name]: value,\r\n    });\r\n  }\r\n\r\n  function handleClick(e) {\r\n    e.preventDefault();\r\n    dispatch(sendUserDetails(form));\r\n    history.push('/app/myprofile')\r\n  }\r\n  return (\r\n    <div>\r\n      <section className=\"flex-container\">\r\n        <form className=\"column-6\">\r\n          <div className=\"field\">\r\n            <label htmlFor=\"name\" className=\"form-label\">\r\n              Name\r\n            </label>\r\n            <input\r\n              name=\"name\"\r\n              value={form.name}\r\n              placeholder={user.username}\r\n              onChange={handleChange}\r\n            ></input>\r\n          </div>\r\n          <div>\r\n          <label htmlFor='role' className='form-label'>Role</label>\r\n          <select\r\n            onChange={handleChange}\r\n            className='select'\r\n            name='role'>\r\n            <option hidden>Select from this list</option>\r\n            <option value=\"Junior\">Junior</option>\r\n            <option value=\"Senior\">Senior</option>\r\n          </select>\r\n          </div>\r\n          <div>\r\n          <label htmlFor='experience' className='form-label'>Experience</label>\r\n          <select\r\n            onChange={handleChange}\r\n            className='select'\r\n            name='experience'>\r\n            <option hidden>Select from this list</option>\r\n            <option value=\"0-1 year experience\">0-1 year experience</option>\r\n            <option value=\"1-2 years experience\">1-2 years experience</option>\r\n            <option value=\"2-3 years experience\">2-3 years experience</option>\r\n            <option value=\"3-4 years experience\">3-4 years experience</option>\r\n            <option value=\"5+ year experience\">5+ year experience</option>\r\n          </select>\r\n          </div>\r\n          <div className=\"field\">\r\n            <label htmlFor=\"bio\" className=\"form-label\">\r\n              Bio\r\n            </label>\r\n            <input\r\n              name=\"bio\"\r\n              type=\"text\"\r\n              value={form.bio}\r\n              placeholder=\"Type your bio here\"\r\n              onChange={handleChange}\r\n            ></input>\r\n          </div>\r\n          <button\r\n            type=\"submit\"\r\n            className=\"button-primary\"\r\n            onClick={handleClick}\r\n            data-testid=\"submitButton\">\r\n            Save\r\n          </button>\r\n        </form>\r\n      </section>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default EditProfile\r\n","import React from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport UsersOnline from \"../components/UsersOnline\";\r\nimport { useAuth0 } from \"@auth0/auth0-react\";\r\nimport { sendUserDetails } from \"../redux/actions/user\";\r\nimport Header from \"../layouts/header/Header\";\r\nimport { QuestionForm } from \"../components/posts/QuestionForm\";\r\nimport { Switch, Route, useRouteMatch } from \"react-router-dom\";\r\nimport ChatComponent from \"../components/ChatComponent\";\r\nimport { PostComponent } from \"../components/posts/PostComponent\";\r\nimport UserProfile from \"../components/users/UserProfile\";\r\nimport UsersList from \"../components/users/UsersList\";\r\nimport MessageListComponent from \"../components/MessageListComponent\";\r\nimport ProfilePage from \"./ProfilePage\";\r\nimport EditProfile from \"../components/users/EditProfile\";\r\n\r\nfunction emailToUsername(email) {\r\n  let username = email.split(\"@\");\r\n  return username[0];\r\n}\r\n\r\nfunction AppHome() {\r\n  const dispatch = useDispatch();\r\n  const { user } = useAuth0();\r\n  const { path } = useRouteMatch();\r\n  const userAccount = useSelector((state) => state.userAccount);\r\n  const waiting = useSelector((state) => state.waiting);\r\n\r\n  if (!waiting) {\r\n    if (userAccount.email === \"\") {\r\n      const defaultUser = { ...user, name: emailToUsername(user.email) };\r\n      dispatch(sendUserDetails(defaultUser));\r\n    }\r\n  }\r\n  //console.log(userAccount);\r\n  return (\r\n    <div>\r\n      {waiting ? (\r\n        <div className=\"spinner\"></div>\r\n      ) : (\r\n        <>\r\n          <Header />\r\n          <UsersOnline />\r\n          <MessageListComponent />\r\n          <Switch>\r\n            <Route exact path={path}>\r\n              <h1>Home</h1>\r\n            </Route>\r\n            <Route exact path={`${path}/messaging/:id`}>\r\n              <ChatComponent />\r\n            </Route>\r\n            <Route path={`${path}/createpost`}>\r\n            <QuestionForm />\r\n            </Route>\r\n            <Route path={`${path}/post/:postId`}>\r\n              <PostComponent />\r\n            </Route>\r\n            <Route path={`${path}/users`}>\r\n              <ProfilePage />\r\n            </Route>\r\n            <Route path={`${path}/myprofile`}>\r\n              <UserProfile />\r\n            </Route>\r\n             <Route path={`${path}/editprofile`}>\r\n              <EditProfile />\r\n             </Route>\r\n          </Switch>\r\n        </>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default AppHome;\r\n","function testReducer(state = \"\", action) {\r\n  switch (action.type) {\r\n    case 'hello':\r\n      console.log('hello');\r\n      return state;\r\n    default: \r\n      return state;\r\n  }\r\n}\r\n\r\nexport default testReducer;","function userAccount(state={}, action) {\r\n  switch (action.type) {\r\n    case 'setUser':\r\n      return {...action.data}\r\n    default:\r\n      return state\r\n  }\r\n}\r\n\r\nexport default userAccount;","function messages(state = {}, action) {\r\n  switch (action.type) {\r\n    case \"setMessages\":\r\n      return action.data;\r\n    case \"setNewMessage\":\r\n      const conversationId = action.data.to;\r\n      let newStateObject = { ...state };\r\n      if (newStateObject[conversationId] === undefined) {\r\n        newStateObject[conversationId] = [action.data];\r\n      } else {\r\n        newStateObject[conversationId] = [\r\n          ...newStateObject[conversationId],\r\n          action.data,\r\n        ];\r\n      }\r\n      return newStateObject;\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n\r\nexport default messages;\r\n","function usersOnline(state={}, action) {\r\n  switch(action.type) {\r\n    case 'setOnlineUsers':\r\n      return action.data\r\n    default:\r\n      return state\r\n  }\r\n}\r\n\r\nexport default usersOnline","function users(state=[], action) {\r\n  switch (action.type) {\r\n    case 'setAllUsers':\r\n      return action.data\r\n    default:\r\n      return state\r\n  }\r\n}\r\n\r\nexport default users","function waiting(state=true, action) {\r\n  switch(action.type) {\r\n    case 'setWaiting':\r\n      return true\r\n    case 'finishWaiting':\r\n      return false\r\n    default:\r\n      return state\r\n  }\r\n}\r\n\r\nexport default waiting","\r\nfunction commentsByPost(state=[], action){\r\n  switch(action.type) {\r\n    case 'setComment':\r\n      return action.data\r\n    case 'setNewComment':\r\n      return [...state, action.data]\r\n    default:\r\n      return state\r\n  }\r\n}\r\n\r\nexport default commentsByPost;","function posts(state=[], action){\r\n    switch(action.type) {\r\n      case 'setPosts':\r\n        return action.data\r\n      case 'addPosts':\r\n        return [...state, action.data]\r\n      default:\r\n        return state\r\n    }\r\n  }\r\n  \r\n  export default posts;","import testReducer from \"./reducers/testReducer\";\r\nimport userAccount from \"./reducers/user\";\r\nimport messages from \"./reducers/messages\";\r\nimport usersOnline from \"./reducers/usersOnline\";\r\nimport users from \"./reducers/users\";\r\nimport waiting from \"./reducers/waiting\";\r\nimport commentsByPost from \"./reducers/comments\";\r\n\r\nimport posts from \"./reducers/posts\";\r\nimport { combineReducers } from \"redux\";\r\n\r\nconst allReducers = combineReducers({\r\n  testReducer,\r\n  userAccount,\r\n  waiting,\r\n  usersOnline,\r\n  messages,\r\n  posts,\r\n  commentsByPost,\r\n  users\r\n});\r\n\r\nexport default allReducers;\r\n","import { useState, useEffect, memo } from \"react\";\r\nimport { createStore, applyMiddleware } from \"redux\";\r\nimport createSocketIoMiddleware from \"redux-socket.io\";\r\nimport io from \"socket.io-client\";\r\nimport { Provider } from \"react-redux\";\r\nimport { useAuth0 } from \"@auth0/auth0-react\";\r\nimport allReducers from \"../redux\";\r\n\r\nexport function SocketReduxWrapper({ children }) {\r\n  const [jwt, setJwt] = useState(\"\");\r\n  const { getAccessTokenSilently, isAuthenticated } = useAuth0();\r\n\r\n  async function getToken() {\r\n    const accessToken = await getAccessTokenSilently({\r\n      audience: \"http://CodeCouchSocket.com/api\",\r\n    });\r\n    setJwt(accessToken);\r\n  }\r\n\r\n  useEffect(() => {\r\n    getToken();\r\n  }, []);\r\n\r\n  if (jwt !== \"\") {\r\n    const socket = io(window.location.origin, {\r\n      query: `token=${jwt}`,\r\n    });\r\n\r\n    const socketIoMiddleware = createSocketIoMiddleware(socket, \"server/\");\r\n\r\n    const store = applyMiddleware(socketIoMiddleware)(createStore)(allReducers);\r\n    return <Provider store={store}>{children}</Provider>;\r\n  } else {\r\n    const socket = io(window.location.origin);\r\n    const socketIoMiddleware = createSocketIoMiddleware(socket, \"server/\");\r\n    const store = applyMiddleware(socketIoMiddleware)(createStore)(allReducers);\r\n    return (\r\n      <Provider store={store}>\r\n        <div className=\"spinner\"></div>\r\n      </Provider>\r\n    );\r\n  }\r\n}\r\n\r\nexport const SocketReduxWrapperMemoized = memo(SocketReduxWrapper);\r\n","import React from \"react\";\r\nimport \"./App.css\";\r\nimport { BrowserRouter as Router, Switch, Route } from \"react-router-dom\";\r\nimport GreetPage from \"./Pages/GreetPage\";\r\nimport AppHome from \"./Pages/AppHome\";\r\nimport { SocketReduxWrapperMemoized } from \"./components/SocketReduxWrapper\";\r\n\r\nfunction App() {\r\n  return (\r\n    <Router>\r\n      <Switch>\r\n        <Route exact path=\"/\">\r\n          <GreetPage />\r\n        </Route>\r\n        <Route path=\"/app\">\r\n          <SocketReduxWrapperMemoized>\r\n            <AppHome />\r\n          </SocketReduxWrapperMemoized>\r\n        </Route>\r\n      </Switch>\r\n    </Router>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\nimport { Auth0Provider } from '@auth0/auth0-react'\r\n\r\nReactDOM.render(\r\n  <>\r\n    <Auth0Provider\r\n    domain=\"dev-ngqwdtsq.us.auth0.com\"\r\n    clientId=\"F5zt73D2nJqsidW1kmelY4v2MduiO0gB\"\r\n    redirectUri={window.location.origin}\r\n    audience=\"http://CodeCouchSocket.com/api\"\r\n    >\r\n    <App />\r\n    </Auth0Provider>\r\n  </>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}